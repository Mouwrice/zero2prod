name: Rust

on:
  pull_request:
  push:
    branches: [main]
    
permissions:
  pull-requests: write
  checks: write

env:
  CARGO_TERM_COLOR: always

jobs:

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: r7kamura/rust-problem-matchers@v1
      - name: Enforce formatting
        run: cargo fmt --all --check
              
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
    - uses: giraffate/clippy-action@v1
      with:
        clippy_flags: -- -D warnings
        reporter: 'github-pr-check'
        fail_on_error: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: "Build, Test & Coverage"
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Generate code coverage
        run: cargo tarpaulin --workspace --out Lcov
      # Upload code coverage to coveralls
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2
