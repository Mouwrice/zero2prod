name: Rust

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
    
permissions:
  pull-requests: write
  checks: write

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.7.1
  SQLX_FEATURES: "rustls,postgres"

jobs:

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - uses: r7kamura/rust-problem-matchers@v1
      - name: Enforce formatting
        run: cargo fmt --all --check
              
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    - uses: Swatinem/rust-cache@v2
      with:
        key: sqlx-${{ env.SQLX_VERSION }}
    - name: Install sqlx-cli
      run:
         cargo install sqlx-cli
           --version=${{ env.SQLX_VERSION }}
           --features ${{ env.SQLX_FEATURES }}
           --no-default-features
           --locked
    - name: Install postgresql-client
      run: sudo apt-get update && sudo apt-get install postgresql-client -y
    - name: Migrate database
      run: SKIP_DOCKER=true ./scripts/init_db.sh
      
    - uses: giraffate/clippy-action@v1
      with:
        clippy_flags: -- -D warnings
        reporter: 'github-pr-check'
        fail_on_error: true
        github_token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: "Build, Test & Coverage"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Install postgresql-client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked
      - name: Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      - run: cargo install cargo-tarpaulin
      - name: Generate code coverage
        run: cargo tarpaulin --workspace --out Lcov
      # Upload code coverage to coveralls
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2
